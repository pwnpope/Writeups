from pwn import *


elf = context.binary = ELF("./malloc_testbed", checksec=True)
libc = elf.libc
context.log_level = "debug"

gs = """
continue"""

def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    else:
        return process(elf.path)

io = start()
#io = remote("206.189.121.78",31911)
io.timeout = 1



def free(idx):
    io.sendlineafter(b"> ", b"2")
    io.sendlineafter(b"index: ", str(idx).encode())

global index
index = 0
def malloc(size):
    global index
    io.sendlineafter(b"> ", b"1")
    io.sendlineafter(b": ", str(size).encode())
    index += 1
    return index

def edit(indx, data):
    io.sendlineafter(b"> ", b"4")
    io.sendlineafter(b": ", str(indx).encode())
    io.sendlineafter(b": ", data)

for i in range(7):
	malloc(24)
for i in range(7):
	free(i)


io.interactive()

